import os
Import('*')

bin_list = [
           ]

lib = 'essfwi'

modules = """
essfwiframework.cpp
updatevelop.cpp
updatesteplenop.cpp
          """.split()

include_dir = [
  '#' + dirs['rsf'],
  '#' + dirs['common'],
  '#' + dirs['modeling'],
  '#' + dirs['mdlib'],
]

depend_libpath = []
depend_libs = ['modeling', 'mdlib', 'common']

# clone the environment from global env and make some modification of it
myenv   = env.Clone(CPPPATH = include_dir)
myenv.Append(LIBPATH = depend_libpath)
myenv.Prepend(LIBS = depend_libs)

objs      = myenv.StaticObject(modules)

# compile the library
ar = myenv.StaticLibrary(target = lib, source = objs)

# install
myenv.Install("#" + dirs['lib'], ar)

# compile each binary
for bin in bin_list:
  bin_obj = myenv.StaticObject(bin[1])
  bin_target = myenv.Program(target = bin[0], source = bin_obj + ar)
  myenv.Install("#" + dirs['bin'], bin_target)
