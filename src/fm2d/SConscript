import os
Import('*')

bin_list = [
			("mshot", "Mmshots.cpp"), 
			("fm-damp", "main-fm-damp.cpp"),
			("fm-sponge", "main-fm-sponge.cpp"),
			("fm-sponge-grad", "main-fm-sponge-grad.cpp"),

           ]

lib = 'fm'

modules = """
fm-params.cpp

          """.split()

include_dir = [
  os.environ['RSFROOT'] + '/include',
  '#' + dirs['util'],
  '#' + dirs['common'],
  '#' + dirs['modeling'],
  '#' + dirs['mdlib'],
]

depend_libpath = [os.environ['RSFROOT'] + '/lib']
depend_libs = ['modeling', 'common', 'mdlib', 'util', 'rsf']

# clone the environment from global env and make some modification of it
myenv   = env.Clone(CPPPATH = include_dir)
myenv.Append(LIBPATH = depend_libpath)
myenv.Append(CXXFLAGS = '-DNO_BLAS')
myenv.Append(LIBS = depend_libs)

objs      = myenv.StaticObject(modules)

# compile the library
ar = myenv.StaticLibrary(target = lib, source = objs)

# install
myenv.Install("#" + dirs['lib'], ar)
# compile each binary
for bin in bin_list:
  bin_obj = myenv.StaticObject(bin[1])
  bin_target = myenv.Program(target = bin[0], source = bin_obj + ar)
  myenv.Install("#" + dirs['bin'], bin_target)
